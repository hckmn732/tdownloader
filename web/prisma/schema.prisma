// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
}

generator client {
  provider = "prisma-client-js"
}

enum TorrentStatus {
  queued
  downloading
  paused
  completed
  failed
  cancelled
}

model Torrent {
  id                 String        @id @default(cuid())
  type               String        // magnet | torrent
  magnetUri          String?
  torrentFilePath    String?
  infoHash           String?       @unique
  originalName       String
  cleanedName        String?
  originalToCleanMap Json?
  suggestedDir       String?
  finalDir           String?
  status             TorrentStatus @default(queued)
  progress           Float         @default(0)
  bytesTotal         BigInt        @default(0)
  bytesDone          BigInt        @default(0)
  downloadSpeed      BigInt        @default(0)
  etaSec             Int?
  aria2Gid           String?       @unique
  errorMessage       String?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  files              TorrentFile[]
  events             EventLog[]
}

model TorrentFile {
  id            String  @id @default(cuid())
  torrentId     String
  torrent       Torrent @relation(fields: [torrentId], references: [id], onDelete: Cascade)
  originalPath  String
  cleanedPath   String?
  bytesTotal    BigInt  @default(0)
  bytesDone     BigInt  @default(0)
  priority      Int     @default(0)
}

model EventLog {
  id        String   @id @default(cuid())
  torrentId String
  torrent   Torrent  @relation(fields: [torrentId], references: [id], onDelete: Cascade)
  level     String   // info | warn | error
  message   String
  createdAt DateTime @default(now())
}

model Setting {
  key   String @id
  value Json
}
